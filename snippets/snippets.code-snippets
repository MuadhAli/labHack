{
    "CNS RSA encryption program": {
        "prefix": "!cns-rsa",
        "body": [
            "import java.util.*;",
            "import java.io.*;",
            "public class rsa",
    "{",
    "    static int gcd(int m,int n)",
    "    {",
    "        while(n!=0)",
    "        {",
    "            int r=m%n;",
    "            m=n;",
    "            n=r;",
    "                }",
    "        return m;",
    "            }",
    "public static void main(String args[])",
    "{",
    "    int p=0,q=0,n=0,e=0,d=0,phi=0;",
    "    int nummes[]=new int[100];",
    "    int encrypted[]=new int[100];",
    "    int decrypted[]=new int[100];",
    "    int i=0,j=0,nofelem=0;",
    "    Scanner sc=new Scanner(System.in);",
    "    String message ;",
    "    System.out.println(\"Enter the Message tobe encrypted:\");",
        "message= sc.nextLine();",
        "System.out.println(\"Enter value of p and q\n\");",
        "p=sc.nextInt();",
        "q=sc.nextInt();",
        "n=p*q;",
        "phi=(p-1)*(q-1);",
        "for(i=2;i<phi;i++)",
        "if(gcd(i,phi)==1)",
        "break;",
        "e=i;",
        "for(i=2;i<phi;i++)",
        "if((e*i-1)%phi==0)",
        "break;",
        "d=i;",
        "for(i=0;i<message.length();i++)",
        "{",
        "char c = message.charAt(i);",
        "int a =(int)c;",
        "nummes[i]=c-96;",
        "                    }",
        "nofelem=message.length();",
        "for(i=0;i<nofelem;i++)",
        "{",
        "encrypted[i]=1;",
        "for(j=0;j<e;j++)",
        "encrypted[i] =(encrypted[i]*nummes[i])%n;",
        "                    }",
        "System.out.println(\"\n Encrypted message\n\");",
        "for(i=0;i<nofelem;i++)",
        "{",
        "System.out.print(encrypted[i]);",
        "System.out.print((char)(encrypted[i",
        "                        ]+96));",
        "                    }",
        "for(i=0;i<nofelem;i++)",
        "{",
        "decrypted[i]=1; for(j=0;j<d;j++)",
        "decrypted[i]=(decrypted[i",
        "                        ]*encrypted[i",
        "                        ])%n;",
        "                    }",
        "System.out.println(\"\n Decrypted message\n \");",
        "for(i=0;i<nofelem;i++)",
        "System.out.print((char)(decrypted[i]+96)); return;",
        "                }",
        "            }",
                ],
                "description": "creates rsa program "
          },
          "error detecting code using CRC-CCITT ":{
              "prefix":"!cns-crc",
              "body": [
                "import java.io.*;",
                "class Crc",
                "{",
                "public static void main(String args[]) throws IOException",
                "{",
                "BufferedReader br=new BufferedReader(new InputStreamReader(System.in));",
                "int[ ] data;",
                "int[ ]div;",
                "int[ ]divisor;",
                "int[ ]rem;",
                "int[ ] crc;",
                "int data_bits, divisor_bits, tot_length;",
                "System.out.println(\"Enter number of data bits : \");",
                "data_bits=Integer.parseInt(br.readLine());",
                "data=new int[data_bits];",
                "for(int i=0; i<data_bits; i++)",
                "System.out.println(\"Enter data bits : \");",
                "data[i]=Integer.parseInt(br.readLine());",
                "System.out.println(\"Enter number of bits in divisor : \");",
                "divisor_bits=Integer.parseInt(br.readLine());",
                "divisor=new int[divisor_bits];",
                "System.out.println(\"Enter Divisor bits : \");",
                "for(int i=0; i<divisor_bits; i++)",
                "divisor[i]=Integer.parseInt(br.readLine());",
                "tot_length=data_bits+divisor_bits;",
                "div=new int[tot_length];",
                "rem=new int[tot_length];",
                "crc=new int[tot_length];",
                "for(int i=0;i<data.length;i++)",
                "div[i]=data[i];",
                "System.out.print(\"Dividend (after appending 0's) are : \");",
                "for(int i=0; i< div.length; i++)",
                "System.out.print(div[i]);",
                "System.out.println();",
                "for(int j=0; j<div.length; j++){",
                "rem[j] = div[j];",
                "}",
                "rem=divide(div, divisor, rem);",
                "for(int i=0;i<div.length;i++)",
               
                "{",
                "crc[i]=(div[i]^rem[i]);",
                "}",
                "System.out.println();",
                "System.out.println(\"CRC code : \");",
                "for(int i=0;i<crc.length;i++)",
                "System.out.print(crc[i]);",
                "System.out.println();",
                "System.out.println(\"Enter CRC code of \"+tot_length+\" bits : \");",
                "for(int i=0; i<crc.length; i++)",
                "crc[i]=Integer.parseInt(br.readLine());",
                "for(int j=0; j<crc.length; j++){",
                "rem[j] = crc[j];",
                "}",
                "rem=divide(crc, divisor, rem);",
                "for(int i=0; i< rem.length; i++)",
                "{",
                "if(rem[i]!=0)",
                "{",
                "System.out.println(\"Error\");",
                "break;",
                "}",
                "if(i==rem.length-1)",
                "System.out.println(\"No Error\");",
                "}",
                "System.out.println(\"THANK YOU.... :)\");",
                "}",
                "static int[] divide(int div[],int divisor[], int rem[])",
                "{",
                "int cur=0;",
                "while(true)",
                "{",
                "for(int i=0;i<divisor.length;i++)",
                "rem[cur+i]=(rem[cur+i]^divisor[i]);",
                "while(rem[cur]==0 && cur!=rem.length-1)",
                "cur++;",
                "if((rem.length-cur)<divisor.length)",
                "break;",
                "}",
                "return rem;",
                "}",
                "}"
              ],
              "description": "crc program"
          }
}