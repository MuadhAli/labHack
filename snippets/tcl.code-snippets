{
    "three nodes point  to  point":{
        "prefix": "!cns-3p2p",
        "body": [
            "set ns [ new Simulator ]",
            "set tf [ open abc.tr w ]",
            "$ns trace-all $tf",
            "set nf [ open exp1.nam w ]",
            "$ns namtrace-all $nf",
            "# The below code is used to create the nodes.",
            "set n0 [$ns node]",
            "set n1 [$ns node]",
            "set n2 [$ns node]",
            "set n3 [$ns node]",
            "#This is used to give color to the packets.",
            "$ns color 1 \"red\"",
            "$ns color 2 \"blue\"",
            "$n0 label \"Source/udp0\"",
            "$n1 label \"Source/udp1\"",
            "$n2 label \"Router\"",
            "$n3 label \"Destination/Null\"",
            "#Vary the below Bandwidth and see the number of packetsdropped.",
            "$ns duplex-link $n0 $n2 100Mb 300ms DropTail",
            "$ns duplex-link $n1 $n2 10Mb 300ms DropTail",
            "$ns duplex-link $n2 $n3 1Mb 300ms DropTail",
            "#The below code is used to set the queue size b/w the nodes",
            "$ns set queue-limit $n0 $n2 1",
            "$ns set queue-limit $n1 $n2 1",
            "$ns set queue-limit $n2 $n3 1",
            "#The below code is used to attach an UDP agent to n0, UDP",
            "#agent to n1 and null agent to n3.",
            "set udp0 [new Agent/UDP]",
            "$ns attach-agent $n0 $udp0",
            "set cbr0 [new Application/Traffic/CBR]",
            "$cbr0 attach-agent $udp0",
            "set null3 [new Agent/Null]",
            "$ns attach-agent $n3 $null3",
            "set udp1 [new Agent/UDP]",
            "$ns attach-agent $n1 $udp1",
            "set cbr1 [new Application/Traffic/CBR]",
            "$cbr1 attach-agent $udp1",
            "#The below code sets the udp0 packets to red and udp1",
            "#packets to blue color",
            "$udp0 set class_ 1",
            "$udp1 set class_ 2",
            "#The below code is used to connect the agents.",
            "$ns connect $udp0 $null3",
            "$ns connect $udp1 $null3",
            "#The below code is used to set the packet size to 500",
            "$cbr1 set packetSize_ 500Mb",
            "#The below code is used to set the interval of the packets,",
            "#i.e., Data rate of the packets. if the data rate is high",
            "#then packets drops are high.",
            "$cbr1 set interval_ 0.005",
            "proc finish { } {",
            "global ns nf tf",
            "$ns flush-trace",
            "exec nam exp1.nam &",
            "close $tf",
            "close $nf",
            "exit 0",
            "}",
            "$ns at 0.1 \"$cbr0 start\"",
            "$ns at 0.1 \"$cbr1 start\"",
            "$ns at 10.0 \"finish\"",
            "$ns run",
            "awk script",
            "BEGIN{",
            "#include<stdio.h>",
            "count=0;",
            "}",
            "{",
            "if($1==\"d\") #d stands for the packets drops.",
            "count++",
            "}",
            "END{",
            "printf(\"The Total no of Packets Dropped due to Congestion :%d\n\n\", count)",
            "}"
        ],
        "description": " Implement three nodes point  to  point network with duplex link between them. Set the queue size, vary the bandwidth and find the number of packets dropped."

    },
    "transmission ping message":{
        "prefix": "!cns-ping",
        "body": [
            "set ns [new Simulator]",
            "set tf [open exp2.tr w]",
            "$ns trace-all $tf",
            "set nf [open exp2.nam w]",
            "$ns namtrace-all $nf",
            "set n0 [$ns node]",
            "set n1 [$ns node]",
            "set n2 [$ns node]",
            "set n3 [$ns node]",
            "set n4 [$ns node]",
            "set n5 [$ns node]",
            "set n6 [$ns node]",
            "$n0 label \"Ping0\"",
            "$n4 label \"Ping4\"",
            "$n5 label \"Ping5\"",
            "$n6 label \"Ping6\"",
            "$n2 label \"Router\"",
            "$ns color 1 \"red\"",
            "$ns color 2 \"green\"",
            "$ns duplex-link $n0 $n2 100Mb 300ms DropTail",
            "$ns duplex-link $n2 $n6 1Mb 300ms DropTail",
            "$ns duplex-link $n5 $n2 100Mb 300ms DropTail",
            "$ns duplex-link $n2 $n4 1Mb 300ms DropTail",
            "$ns duplex-link $n3 $n2 1Mb 300ms DropTail",
            "$ns duplex-link $n1 $n2 1Mb 300ms DropTail",
            "$ns queue-limit $n0 $n2 5",
            "$ns queue-limit $n2 $n6 2",
            "$ns queue-limit $n2 $n4 3",
            "$ns queue-limit $n5 $n2 5",
            "#The below code is used to connect between the ping agents",
            "#to the node n0, n4 , n5 and n6.",
            "set ping0 [new Agent/Ping]",
            "$ns attach-agent $n0 $ping0",
            "set ping4 [new Agent/Ping]",
            "$ns attach-agent $n4 $ping4",
            "set ping5 [new Agent/Ping]",
            "$ns attach-agent $n5 $ping5",
            "set ping6 [new Agent/Ping]",
            "$ns attach-agent $n6 $ping6",
            "$ping0 set packetSize_ 50000",
            "$ping0 set interval_ 0.0001",
            "$ping5 set packetSize_ 60000",
            "$ping5 set interval_ 0.00001",
            "$ping0 set class_ 1",
            "$ping5 set class_ 2",
            "$ns connect $ping0 $ping4",
            "$ns connect $ping5 $ping6",
            "#The below function is executed when the ping agent receives",
            "#a reply from the destination",
            "Agent/Ping instproc recv {from rtt} {",
            "$self instvar node_",
            "puts \" The node [$node_ id] received an reply from $from with round trip \"time of $rtt",
            "}",
            "proc finish {} {",
            "global ns nf tf",
            "exec nam exp2.nam &",
            "$ns flush-trace",
            "close $tf",
            "close $nf",
            "exit 0",
            "}",
            "$ns rtmodel-at 0.9 down $n2 $n6",
            "$ns rtmodel-at 1.5 up $n2 $n6",
            "$ns at 0.1 \"$ping0 send\"",
            "$ns at 0.2 \"$ping0 send\"",
            "$ns at 0.3 \"$ping0 send\"",
            "$ns at 0.4 \"$ping0 send\"",
            "$ns at 0.5 \"$ping0 send\"",
            "$ns at 0.6 \"$ping0 send\"",
            "$ns at 0.7 \"$ping0 send\"",
            "$ns at 0.8 \"$ping0 send\"",
            "$ns at 0.9 \"$ping0 send\"",
            "$ns at 1.0 \"$ping0 send\"",
            "$ns at 1.1 \"$ping0 send\"",
            "$ns at 1.2 \"$ping0 send\"",
            "$ns at 1.3 \"$ping0 send\"",
            "$ns at 1.4 \"$ping0 send\"",
            "$ns at 1.5 \"$ping0 send\"",
            "$ns at 1.6 \"$ping0 send\"",
            "$ns at 1.7 \"$ping0 send\"",
            "$ns at 1.8 \"$ping0 send\"",
            "$ns at 0.1 \"$ping5 send\"",
            "$ns at 0.2 \"$ping5 send\"",
            "$ns at 0.3 \"$ping5 send\"",
            "$ns at 0.4 \"$ping5 send\"",
            "$ns at 0.5 \"$ping5 send\"",
            "$ns at 0.6 \"$ping5 send\"",
            "$ns at 0.7 \"$ping5 send\"",
            "$ns at 0.8 \"$ping5 send\"",
            "$ns at 0.9 \"$ping5 send\"",
            "$ns at 1.0 \"$ping5 send\"",
            "$ns at 1.1 \"$ping5 send\"",
            "$ns at 1.2 \"$ping5 send\"",
            "$ns at 1.3 \"$ping5 send\"",
            "$ns at 1.4 \"$ping5 send\"",
            "$ns at 1.5 \"$ping5 send\"",
            "$ns at 1.6 \"$ping5 send\"",
            "$ns at 1.7 \"$ping5 send\"",
            "$ns at 1.8 \"$ping5 send\"",
            "$ns at 5.0 \"finish\"",
            "$ns run",
            "awk script",
            "BEGIN{",
            "#include<stdio.h>",
            "count=0;",
            "}",
            "{",
            "if($1==\"d\")",
            "count++",
            "}",
            "END{",
            "printf(\"The Total no of Packets Dropped due toCongestion:%d \n\", count)",
            "}"
        ],
        "description": "Implement transmission of ping messages/trace route over a network topology consisting of 6 nodes and find the number of packets dropped due to congestion"
    }
}